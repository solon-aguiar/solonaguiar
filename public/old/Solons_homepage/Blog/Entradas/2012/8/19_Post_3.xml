<?xml version="1.0"?>
<content collectionGUID="069C93EB-8A87-4F9D-AFFB-07BD4D352B1D">
  <lastEdited clientType="local-build-20130217" date="2013-02-17 21:24:17 -0300"/>
  <textBox id="generic-header-attribute" dynamic="no" visible="yes">
    <richText>Quick android intro</richText>
  </textBox>
  <textBox id="generic-title-attributes" dynamic="no" visible="yes">
    <richText>Post #3</richText>
  </textBox>
  <textBox id="generic-datefield-attributes" dynamic="no" visible="yes">
    <richText>domingo, 19 de agosto de 2012</richText>
  </textBox>
  <textBox id="generic-body-attributes" dynamic="no" visible="yes">
    <richText>In few words, I think the three main things one needs to at least reconize are the &lt;i&gt;Activities&lt;/i&gt;, &lt;i&gt;Services&lt;/i&gt; and &lt;b&gt;Intents&lt;/b&gt;. &#xD;&#xD;&lt;i&gt;Activities&lt;/i&gt; are directly related to the user interface. They map the UI [created separately as a .xml file] and what the user can do. Usually they hold the context of the application and provide access to lot of &lt;i&gt;built-in&lt;/i&gt; android functionalities/classes. &lt;i&gt;Services&lt;/i&gt;, on the other hand, are not related to user interface. They usually run in the background of the application doing some important work that the user might not be aware of. For instance, in some application you might want to keep sending emails on the background, while not needing the UI to be up on the screen (letting the user use the phone for something else). This can be accomplished with Services. Last, but not least, there are the &lt;i&gt;Intents&lt;/i&gt;. Intents are some sort of &lt;i&gt;requests&lt;/i&gt; that the developer might make either to the OS or to other applications/services. That makes it possible, for example, for a call to a built-in android activity [such as displaying the user contacts or email screen] or another app to start the email service. There are a lot of different intent types on the android platform and/or the developer might also create his/her own. &#xD;&#xD;While developing Android applications other especial details must be taken care of. The first one is deciding what API level(s) to support. That&#x2019;s a MUST question that has to be answered in the early days of the project (I&#x2019;d say in the first day!), because it will impact directly on what tool the developers will have to create and test de application (the interfaces vary from level to level and different set of emulators exist for each API). Of course it&#x2019;s also a business and client decision, but everyone should be involved, because has a direct impact on the product.&#xD;&#xD;Another important point is the AndroidManifest file. It describers the application to the operating system (its also used by the Play Store to check compatibility). It is where, for example, the developer specifies the minimum API level the application requires, the set of permissions it needs from the user (such as sending SMSs, accessing the network state, read phone contacts etc.), declares the set services provided by the application and the main activity (the one used to start the app).&#xD;&#xD;Android is a really cool technology. It was my first experience with mobile development. It was a good challenge that I enjoyed facing. I hope I can work with it again. Also, another experience with other(s) type of mobile technology would be awesome, so I could have a chance to compare the strengths and weaknesses of each one of them.  </richText>
  </textBox>
</content>
